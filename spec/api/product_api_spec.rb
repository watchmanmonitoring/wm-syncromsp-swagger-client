=begin
#Syncro

#Welcome to the official Syncro API Docs.  To use these docs, you will need an active Syncro account. You can sign up for one here: [Syncro](https://syncromsp.com)  If you already have an active account, fill in your subdomain below and then click \"Authorize\" and fill in your api-key. The key is specific to your user account so it is found on the your user profile page.  Please review the [API License Agreement](https://syncromsp.com/syncromsp-api-license-agreement/) before using our API. By accessing our API, you are agreeing to the API License Agreement.  Please note there is a rate limit of 180 requests per minute per IP address on API Usage.    

OpenAPI spec version: v1
Contact: help@syncromsp.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.25
=end

require 'spec_helper'
require 'json'

# Unit tests for WmSyncromspSwaggerClient::ProductApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ProductApi' do
  before do
    # run before each test
    @instance = WmSyncromspSwaggerClient::ProductApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProductApi' do
    it 'should create an instance of ProductApi' do
      expect(@instance).to be_instance_of(WmSyncromspSwaggerClient::ProductApi)
    end
  end

  # unit tests for products_barcode_get
  # Returns a Product by Barcode
  # Required permission: Products - List/Search 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :barcode Product Barcode string
  # @return [nil]
  describe 'products_barcode_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for products_categories_get
  # Returns a paginated list of Product Categories
  # Required permission: Products - List/Search 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'products_categories_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for products_get
  # Returns a paginated list of Products
  # Required permission: Products - List/Search 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sort A Product field to order by. Example \&quot;name ASC\&quot;.
  # @option opts [String] :sku Returns Products with the SKU.
  # @option opts [String] :name Returns Products with the name.
  # @option opts [String] :upc_code Returns Products with the UPC Code.
  # @option opts [Integer] :category_id Returns Products from the Category.
  # @option opts [Array<Integer>] :id Any product with ID included in the list.
  # @option opts [Array<Integer>] :id_not Any product with ID not included in the list.
  # @option opts [String] :query Search query.
  # @option opts [Integer] :page Returns provided page of results, each &#x27;page&#x27; contains 25 results.
  # @return [nil]
  describe 'products_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for products_id_add_images_post
  # Creates a Product Image
  # Required permission: Products - Edit 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Object] :body 
  # @return [nil]
  describe 'products_id_add_images_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for products_id_delete_image_delete
  # Deletes a Product Image
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :photo_id 
  # @return [nil]
  describe 'products_id_delete_image_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for products_id_get
  # Retrieves a Product by ID
  # Required permission: Products - List/Search 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'products_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for products_id_location_quantities_put
  # Updates a Location Quantity
  # Required permission: Products - Edit Quantities 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Body26] :body 
  # @return [nil]
  describe 'products_id_location_quantities_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for products_id_put
  # Updates an existing Product by ID
  # Required permission: Products - Edit 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Body25] :body Product object that needs to be updated
  # @return [nil]
  describe 'products_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for products_post
  # Creates a Product
  # Required permission: Products - Create 
  # @param [Hash] opts the optional parameters
  # @option opts [Body24] :body Product object that needs to be added
  # @return [nil]
  describe 'products_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
