=begin
#Syncro

#Welcome to the official Syncro API Docs.  To use these docs, you will need an active Syncro account. You can sign up for one here: [Syncro](https://syncromsp.com)  If you already have an active account, fill in your subdomain below and then click \"Authorize\" and fill in your api-key. The key is specific to your user account so it is found on the your user profile page.  Please review the [API License Agreement](https://syncromsp.com/syncromsp-api-license-agreement/) before using our API. By accessing our API, you are agreeing to the API License Agreement.  Please note there is a rate limit of 180 requests per minute per IP address on API Usage.    

OpenAPI spec version: v1
Contact: help@syncromsp.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.25
=end

module WmSyncromspSwaggerClient
  class CustomerApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Returns a paginated list of customers for autocomplete query
    # @param [Hash] opts the optional parameters
    # @option opts [String] :query Search query
    # @return [nil]
    def customers_autocomplete_get(opts = {})
      customers_autocomplete_get_with_http_info(opts)
      nil
    end

    # Returns a paginated list of customers for autocomplete query
    # @param [Hash] opts the optional parameters
    # @option opts [String] :query Search query
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def customers_autocomplete_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CustomerApi.customers_autocomplete_get ...'
      end
      # resource path
      local_var_path = '/customers/autocomplete'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'query'] = opts[:'query'] if !opts[:'query'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomerApi#customers_autocomplete_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Returns a paginated list of customers
    # Required permission: Customers - List/Search Single-Customer Users can only access own customer (self). 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :sort A customer field to order by. Examples \&quot;firstname ASC\&quot;, \&quot;city DESC\&quot;.
    # @option opts [String] :query Search query
    # @option opts [String] :firstname Any customers with a first name like the parameter
    # @option opts [String] :lastname Any customers with a last name like the parameter
    # @option opts [String] :business_name Any customers with a business name like the parameter
    # @option opts [Array<Integer>] :id Any customers with ID included in the list
    # @option opts [Array<Integer>] :not_id Any customers with ID not included in the list
    # @option opts [String] :email 
    # @option opts [String] :include_disabled Whether or not the returned list of customers includes disabled customers (default to false)
    # @option opts [Integer] :page Returns provided page of results, each &#x27;page&#x27; contains 25 results
    # @return [nil]
    def customers_get(opts = {})
      customers_get_with_http_info(opts)
      nil
    end

    # Returns a paginated list of customers
    # Required permission: Customers - List/Search Single-Customer Users can only access own customer (self). 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :sort A customer field to order by. Examples \&quot;firstname ASC\&quot;, \&quot;city DESC\&quot;.
    # @option opts [String] :query Search query
    # @option opts [String] :firstname Any customers with a first name like the parameter
    # @option opts [String] :lastname Any customers with a last name like the parameter
    # @option opts [String] :business_name Any customers with a business name like the parameter
    # @option opts [Array<Integer>] :id Any customers with ID included in the list
    # @option opts [Array<Integer>] :not_id Any customers with ID not included in the list
    # @option opts [String] :email 
    # @option opts [String] :include_disabled Whether or not the returned list of customers includes disabled customers
    # @option opts [Integer] :page Returns provided page of results, each &#x27;page&#x27; contains 25 results
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def customers_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CustomerApi.customers_get ...'
      end
      # resource path
      local_var_path = '/customers'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'sort'] = opts[:'sort'] if !opts[:'sort'].nil?
      query_params[:'query'] = opts[:'query'] if !opts[:'query'].nil?
      query_params[:'firstname'] = opts[:'firstname'] if !opts[:'firstname'].nil?
      query_params[:'lastname'] = opts[:'lastname'] if !opts[:'lastname'].nil?
      query_params[:'business_name'] = opts[:'business_name'] if !opts[:'business_name'].nil?
      query_params[:'id'] = @api_client.build_collection_param(opts[:'id'], :multi) if !opts[:'id'].nil?
      query_params[:'not_id'] = @api_client.build_collection_param(opts[:'not_id'], :multi) if !opts[:'not_id'].nil?
      query_params[:'email'] = opts[:'email'] if !opts[:'email'].nil?
      query_params[:'include_disabled'] = opts[:'include_disabled'] if !opts[:'include_disabled'].nil?
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomerApi#customers_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Deletes a Customer by ID
    # Required permission: Customers - Delete 
    # @param id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def customers_id_delete(id, opts = {})
      customers_id_delete_with_http_info(id, opts)
      nil
    end

    # Deletes a Customer by ID
    # Required permission: Customers - Delete 
    # @param id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def customers_id_delete_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CustomerApi.customers_id_delete ...'
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling CustomerApi.customers_id_delete"
      end
      # resource path
      local_var_path = '/customers/{id}'.sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomerApi#customers_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Retrieves a Customer by ID
    # Required permission: Customers - View Detail Single-Customer Users can only access own customer (self). 
    # @param id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def customers_id_get(id, opts = {})
      customers_id_get_with_http_info(id, opts)
      nil
    end

    # Retrieves a Customer by ID
    # Required permission: Customers - View Detail Single-Customer Users can only access own customer (self). 
    # @param id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def customers_id_get_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CustomerApi.customers_id_get ...'
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling CustomerApi.customers_id_get"
      end
      # resource path
      local_var_path = '/customers/{id}'.sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomerApi#customers_id_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Updates an existing Customer by ID
    # Required permission: Customers - Edit Single-Customer Users can only access own customer (self). 
    # @param id 
    # @param [Hash] opts the optional parameters
    # @option opts [Object] :body 
    # @return [nil]
    def customers_id_put(id, opts = {})
      customers_id_put_with_http_info(id, opts)
      nil
    end

    # Updates an existing Customer by ID
    # Required permission: Customers - Edit Single-Customer Users can only access own customer (self). 
    # @param id 
    # @param [Hash] opts the optional parameters
    # @option opts [Object] :body 
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def customers_id_put_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CustomerApi.customers_id_put ...'
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling CustomerApi.customers_id_put"
      end
      # resource path
      local_var_path = '/customers/{id}'.sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(opts[:'body']) 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomerApi#customers_id_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Returns latest Customer
    # Required permission: Customers - Edit Single-Customer Users can only access own customer (self). 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def customers_latest_get(opts = {})
      customers_latest_get_with_http_info(opts)
      nil
    end

    # Returns latest Customer
    # Required permission: Customers - Edit Single-Customer Users can only access own customer (self). 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def customers_latest_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CustomerApi.customers_latest_get ...'
      end
      # resource path
      local_var_path = '/customers/latest'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomerApi#customers_latest_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Creates a Customer
    # Required permission: Customers - Create 
    # @param [Hash] opts the optional parameters
    # @option opts [Object] :body 
    # @return [nil]
    def customers_post(opts = {})
      customers_post_with_http_info(opts)
      nil
    end

    # Creates a Customer
    # Required permission: Customers - Create 
    # @param [Hash] opts the optional parameters
    # @option opts [Object] :body 
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def customers_post_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: CustomerApi.customers_post ...'
      end
      # resource path
      local_var_path = '/customers'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] || @api_client.object_to_http_body(opts[:'body']) 

      return_type = opts[:return_type] 

      auth_names = opts[:auth_names] || ['bearerAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: CustomerApi#customers_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
